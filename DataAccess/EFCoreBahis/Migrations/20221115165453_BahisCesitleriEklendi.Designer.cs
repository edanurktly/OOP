// <auto-generated />
using System;
using EFCoreBahis.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreBahis.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20221115165453_BahisCesitleriEklendi")]
    partial class BahisCesitleriEklendi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.BahisCesit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BahisKonusuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OynananId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BahisKonusuId");

                    b.HasIndex("OynananId");

                    b.ToTable("BahisCesitleri");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.BahisHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BahisCesitDetayId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OynananTutar")
                        .HasColumnType("float");

                    b.Property<int>("OynayanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BahisCesitDetayId");

                    b.HasIndex("OynayanId");

                    b.ToTable("BahisHareketleri");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.BahisKonusu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Acikmi")
                        .HasColumnType("bit");

                    b.Property<string>("BahisAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KapanisSaati")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BahisKonuları");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.Kasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("KasaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ToplamBakiye")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kasalar");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.KasaHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BahisCesitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("HareketTipi")
                        .HasColumnType("tinyint");

                    b.Property<int>("KasaId")
                        .HasColumnType("int");

                    b.Property<int>("OynayanId")
                        .HasColumnType("int");

                    b.Property<double>("Tutar")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BahisCesitId");

                    b.HasIndex("KasaId");

                    b.HasIndex("OynayanId");

                    b.ToTable("KasaHareketleri");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.Oynanan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BahisKonusuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Guc")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BahisKonusuId");

                    b.ToTable("Oynananlar");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.Oynayan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Bakiye")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Oynayanlar");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.BahisCesit", b =>
                {
                    b.HasOne("EFCoreBahis.Entites.Concrete.BahisKonusu", "BahisKonusu")
                        .WithMany("BahisCesitleri")
                        .HasForeignKey("BahisKonusuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreBahis.Entites.Concrete.Oynanan", null)
                        .WithMany("BahisCesitleri")
                        .HasForeignKey("OynananId");

                    b.Navigation("BahisKonusu");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.BahisHareket", b =>
                {
                    b.HasOne("EFCoreBahis.Entites.Concrete.BahisCesit", "BahisCesitDetay")
                        .WithMany()
                        .HasForeignKey("BahisCesitDetayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreBahis.Entites.Concrete.Oynayan", "Oynayan")
                        .WithMany()
                        .HasForeignKey("OynayanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BahisCesitDetay");

                    b.Navigation("Oynayan");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.KasaHareket", b =>
                {
                    b.HasOne("EFCoreBahis.Entites.Concrete.BahisCesit", "BahisCesit")
                        .WithMany()
                        .HasForeignKey("BahisCesitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreBahis.Entites.Concrete.Kasa", "Kasa")
                        .WithMany("KasaHareketleri")
                        .HasForeignKey("KasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreBahis.Entites.Concrete.Oynayan", "Oynayan")
                        .WithMany()
                        .HasForeignKey("OynayanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BahisCesit");

                    b.Navigation("Kasa");

                    b.Navigation("Oynayan");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.Oynanan", b =>
                {
                    b.HasOne("EFCoreBahis.Entites.Concrete.BahisKonusu", null)
                        .WithMany("Oyuncular")
                        .HasForeignKey("BahisKonusuId");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.BahisKonusu", b =>
                {
                    b.Navigation("BahisCesitleri");

                    b.Navigation("Oyuncular");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.Kasa", b =>
                {
                    b.Navigation("KasaHareketleri");
                });

            modelBuilder.Entity("EFCoreBahis.Entites.Concrete.Oynanan", b =>
                {
                    b.Navigation("BahisCesitleri");
                });
#pragma warning restore 612, 618
        }
    }
}
