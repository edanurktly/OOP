// <auto-generated />
using System;
using EfCoreSinema.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreSinema.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20221118135256_newGuid")]
    partial class newGuid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00c29cd0-6cd1-4a34-89b7-11965d71f043"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FilmAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short?>("FilmSuresi")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Gosterim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d468e8d8-dfa1-4a98-8e12-2260f8c635d9"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("FilmID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HaftaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeansID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FilmID");

                    b.HasIndex("HaftaID");

                    b.HasIndex("SalonID");

                    b.HasIndex("SeansID");

                    b.ToTable("Gosterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Hafta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3c1a1788-1914-4e70-9c6d-e00db6f5cf0b"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HaftaAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HaftaBaslangicTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HaftaBitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Haftalar");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Kategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("f09b5a5e-86b4-42d8-95a8-688e44cce24c"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("KategoriAdi")
                        .IsUnique();

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Salon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("1f8122ef-8759-4a93-96ea-eb98ba1f2051"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<byte?>("Kapasite")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalonAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Salonlar");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Seans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("bde8f756-5973-493c-966b-be4e6f61f938"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SeansAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Seanslar");
                });

            modelBuilder.Entity("FilmKategori", b =>
                {
                    b.Property<Guid>("FilmlerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KategorilerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilmlerId", "KategorilerId");

                    b.HasIndex("KategorilerId");

                    b.ToTable("FilmKategori");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Gosterim", b =>
                {
                    b.HasOne("EfCoreSinema.Entites.Concrete.Film", "Filmler")
                        .WithMany("Gösterimler")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreSinema.Entites.Concrete.Hafta", "Haftalar")
                        .WithMany("Gösterimler")
                        .HasForeignKey("HaftaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreSinema.Entites.Concrete.Salon", "Salonlar")
                        .WithMany("Gösterimler")
                        .HasForeignKey("SalonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreSinema.Entites.Concrete.Seans", "Seanslar")
                        .WithMany("Gösterimler")
                        .HasForeignKey("SeansID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filmler");

                    b.Navigation("Haftalar");

                    b.Navigation("Salonlar");

                    b.Navigation("Seanslar");
                });

            modelBuilder.Entity("FilmKategori", b =>
                {
                    b.HasOne("EfCoreSinema.Entites.Concrete.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreSinema.Entites.Concrete.Kategori", null)
                        .WithMany()
                        .HasForeignKey("KategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Film", b =>
                {
                    b.Navigation("Gösterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Hafta", b =>
                {
                    b.Navigation("Gösterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Salon", b =>
                {
                    b.Navigation("Gösterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entites.Concrete.Seans", b =>
                {
                    b.Navigation("Gösterimler");
                });
#pragma warning restore 612, 618
        }
    }
}
